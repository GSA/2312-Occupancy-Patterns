oescolorrrs::scale_color_oes() +
theme_light() +
theme(
legend.position = "None",
axis.title.y = element_text(size = 8),
axis.title.x = element_blank(),
axis.text.x = element_blank())
p_2
file_name <- "abstract_2.png"
fp <- file.path(params$google_drive_home,"04. Analysis", "output", "png",file_name)
ggsave(filename = fp, plot = p_2, width = 3, height = 3, units = "in")
p_2 <-
prep_d_05 %>%
mutate(.cluster_5 = fct_relabel(.cluster_5,~str_wrap(.,width = 50))) %>%
ggplot(aes(y = num, axis1 = .cluster_5, axis2 = position_category_description, fill = .cluster_5)) +
geom_alluvium(width = 1/12) +
geom_stratum(width = 1/12,
# alpha = 1,
fill = "black",
color = "white"
) +
geom_label(stat = "stratum", aes(label = after_stat(stratum)),
fill = "white",
# , alpha = .05,
size = 3,
hjust = "inward"
) +
ylab("Number of employees") +
scale_y_continuous(labels = scales::comma) +
oescolorrrs::scale_fill_oes() +
oescolorrrs::scale_color_oes() +
theme_light() +
theme(
legend.position = "None",
axis.title.y = element_text(size = 8),
axis.title.x = element_blank(),
axis.text.x = element_blank())
p_2
file_name <- "abstract_2.png"
fp <- file.path(params$google_drive_home,"04. Analysis", "output", "png",file_name)
ggsave(filename = fp, plot = p_2, width = 3, height = 3, units = "in")
p_2 <-
prep_d_05 %>%
mutate(.cluster_5 = fct_relabel(.cluster_5,~str_wrap(.,width = 50))) %>%
ggplot(aes(y = num, axis1 = .cluster_5, axis2 = position_category_description, fill = .cluster_5)) +
geom_alluvium(width = 1/12) +
geom_stratum(width = 1/12,
# alpha = 1,
fill = "black",
color = "white"
) +
geom_label(stat = "stratum", aes(label = after_stat(stratum)),
fill = "white",
# , alpha = .05,
size = 2,
hjust = "inward"
) +
ylab("Number of employees") +
scale_y_continuous(labels = scales::comma) +
oescolorrrs::scale_fill_oes() +
oescolorrrs::scale_color_oes() +
theme_light() +
theme(
legend.position = "None",
axis.title.y = element_text(size = 8),
axis.title.x = element_blank(),
axis.text.x = element_blank())
p_2
file_name <- "abstract_2.png"
fp <- file.path(params$google_drive_home,"04. Analysis", "output", "png",file_name)
ggsave(filename = fp, plot = p_2, width = 3, height = 3, units = "in")
prep_01 <-
d %>%
group_by(.cluster_5) %>%
summarise(num = mean(daily_status_reporting_to_job_site)) %>%
ungroup()
prep_02 <-
d %>%
group_by(.cluster_5) %>%
summarise(y = max(density(daily_status_teleworking)$y),
x = density(daily_status_teleworking)$x[density(daily_status_teleworking)$y == max(density(daily_status_teleworking)$y)]
)
prep_01 <-
d %>%
group_by(.cluster_5) %>%
summarise(num = mean(daily_status_teleworking)) %>%
ungroup()
prep_02 <-
d %>%
group_by(.cluster_5) %>%
summarise(y = max(density(daily_status_teleworking)$y),
x = density(daily_status_teleworking)$x[density(daily_status_teleworking)$y == max(density(daily_status_teleworking)$y)]
)
p_1 <-
prep_01 %>%
ggplot(
aes(x = .cluster_5, y = num, fill = .cluster_5)
) +
geom_col() +
scale_y_continuous(labels = scales::comma) +
ylab("Mean days of telework") +
theme_light() +
oescolorrrs::scale_fill_oes() +
theme(
legend.position = "None",
axis.title.x = element_blank(),
axis.text.x = element_text(size = 8))
p_2 <-
d %>%
ggplot(
aes(x = daily_status_teleworking, color = .cluster_5, fill = .cluster_5)
) +
geom_density(alpha = .5) +
# geom_vline(data = prep_01, aes(xintercept = num, color = .cluster_5)) +
geom_text(data=prep_02, aes(x=x, y=y, label=.cluster_5), size = 3, hjust = "inward") +
xlab("Days of telework") +
ylab("Density") +
theme_light() +
oescolorrrs::scale_fill_oes() +
oescolorrrs::scale_color_oes() +
theme(legend.position = "None")
p_1|p_2
prep_01 <-
d %>%
group_by(.cluster_5) %>%
summarise(num = mean(daily_status_teleworking_working_prop)) %>%
ungroup()
prep_01 <-
d %>%
group_by(.cluster_5) %>%
summarise(num = mean(daily_status_teleworking_working_prop)) %>%
ungroup()
prep_02 <-
d %>%
group_by(.cluster_5) %>%
summarise(y = max(density(daily_status_teleworking_working_prop)$y),
x = density(daily_status_teleworking_working_prop)$x[density(daily_status_teleworking_working_prop)$y == max(density(daily_status_teleworking_working_prop)$y)]
)
p_1 <-
prep_01 %>%
ggplot(
aes(x = .cluster_5, y = num, fill = .cluster_5)
) +
geom_col() +
scale_y_continuous(labels = scales::comma) +
ylab("Mean days of telework") +
theme_light() +
oescolorrrs::scale_fill_oes() +
theme(
legend.position = "None",
axis.title.x = element_blank(),
axis.text.x = element_text(size = 8))
p_2 <-
d %>%
ggplot(
aes(x = daily_status_teleworking_working_prop, color = .cluster_5, fill = .cluster_5)
) +
geom_density(alpha = .5) +
# geom_vline(data = prep_01, aes(xintercept = num, color = .cluster_5)) +
geom_text(data=prep_02, aes(x=x, y=y, label=.cluster_5), size = 3, hjust = "inward") +
xlab("Days of telework") +
ylab("Density") +
theme_light() +
oescolorrrs::scale_fill_oes() +
oescolorrrs::scale_color_oes() +
theme(legend.position = "None")
p_1|p_2
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_flat_violin(position = position_nudge(x = .2, y = 0),adjust = 2)+
geom_point(position = position_jitter(width = .15), size = .25)
{
devtools::install_github(repo = "jorvlan/raincloudplots")
}
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_flat_violin(position = position_nudge(x = .2, y = 0),adjust = 2)+
geom_point(position = position_jitter(width = .15), size = .25)
if(!("ggrain" %in% installed.packages()[,"Package"]))
{
install.packages("ggrain")
}
library(ggrain)
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_rain(alpha = .5)
d %>%
ggplot(
aes(y = .cluster_5, x = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_rain(alpha = .5)
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_rain(alpha = .5)
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_rain(alpha = .5) +
coord_flip()
d %>%
ggplot(
aes(x = 1, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_rain(alpha = .5) +
coord_flip()
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_rain(alpha = .5) +
coord_flip()
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_rain(alpha = .5,
rain.side = "1") +
coord_flip()
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_rain(alpha = .5,
rain.side = "l") +
coord_flip()
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_rain(alpha = .5,
rain.side = "r") +
coord_flip()
d %>%
ggplot(
aes(x = 1, y = daily_status_teleworking_working_prop, fill = .cluster_5)
) +
geom_rain(alpha = .5,
rain.side = "r") +
coord_flip()
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5, color = .cluster_5)) +
geom_jitter(position = position_jitter(0.2), color = "darkgray")
prep_01 <-
d %>%
group_by(.cluster_5) %>%
summarise(num = mean(daily_status_teleworking_working_prop),
l = quantile(daily_status_teleworking_working_prop, probs = .25)) %>%
ungroup()
prep_01
prep_01 <-
d %>%
group_by(.cluster_5) %>%
summarise(num = mean(daily_status_teleworking_working_prop),
l = quantile(daily_status_teleworking_working_prop, probs = .25),
u = quantile(daily_status_teleworking_working_prop, probs = .y5)
) %>%
ungroup()
prep_01 <-
d %>%
group_by(.cluster_5) %>%
summarise(num = mean(daily_status_teleworking_working_prop),
l = quantile(daily_status_teleworking_working_prop, probs = .25),
u = quantile(daily_status_teleworking_working_prop, probs = .75)
) %>%
ungroup()
prep_01 <-
d %>%
group_by(.cluster_5) %>%
summarise(num = mean(daily_status_teleworking_working_prop),
l = quantile(daily_status_teleworking_working_prop, probs = .25),
u = quantile(daily_status_teleworking_working_prop, probs = .75)
) %>%
ungroup()
d %>%
ggplot(
aes(x = .cluster_5, y = daily_status_teleworking_working_prop, fill = .cluster_5, color = .cluster_5)) +
geom_jitter(position = position_jitter(0.2), color = "darkgray") +
geom_pointrange(aes(ymin = l, ymax = u),data = prep_01)
d %>%
ggplot(
aes(
x = .cluster_5,
y = daily_status_teleworking_working_prop,
fill = .cluster_5,
color = .cluster_5
)
) +
geom_jitter(position = position_jitter(0.2), color = "darkgray") +
geom_pointrange(
aes(
x = .cluster_5,
y = daily_status_teleworking_working_prop,
fill = .cluster_5,
color = .cluster_5,
ymin = l,
ymax = u
),
data = prep_01
)
d %>%
ggplot(
aes(
x = .cluster_5,
y = daily_status_teleworking_working_prop,
fill = .cluster_5,
color = .cluster_5
)
) +
geom_jitter(position = position_jitter(0.2), color = "darkgray") +
geom_pointrange(
aes(
x = .cluster_5,
fill = .cluster_5,
color = .cluster_5,
ymin = l,
ymax = u
),
data = prep_01
)
# d %>%
ggplot(data = d,
aes(
x = .cluster_5,
y = daily_status_teleworking_working_prop,
fill = .cluster_5,
color = .cluster_5
)
) +
geom_jitter(position = position_jitter(0.2), color = "darkgray") +
geom_pointrange(
aes(
x = .cluster_5,
fill = .cluster_5,
color = .cluster_5,
ymin = l,
ymax = u
),
data = prep_01
)
prep_01
# d %>%
ggplot(
) +
geom_jitter(data = d,
aes(
x = .cluster_5,
y = daily_status_teleworking_working_prop,
fill = .cluster_5,
color = .cluster_5
)position = position_jitter(0.2), color = "darkgray") +
# d %>%
ggplot(
) +
geom_jitter(data = d,
aes(
x = .cluster_5,
y = daily_status_teleworking_working_prop,
fill = .cluster_5,
color = .cluster_5
),
position = position_jitter(0.2), color = "darkgray") +
geom_pointrange(
aes(
x = .cluster_5,
fill = .cluster_5,
color = .cluster_5,
ymin = l,
ymax = u
),
data = prep_01
)
# d %>%
ggplot(
) +
# geom_jitter(data = d,
#   aes(
#     x = .cluster_5,
#     y = daily_status_teleworking_working_prop,
#     fill = .cluster_5,
#     color = .cluster_5
#   ),
#   position = position_jitter(0.2), color = "darkgray") +
geom_pointrange(
aes(
x = .cluster_5,
fill = .cluster_5,
color = .cluster_5,
ymin = l,
ymax = u
),
data = prep_01
)
# d %>%
ggplot(
) +
# geom_jitter(data = d,
#   aes(
#     x = .cluster_5,
#     y = daily_status_teleworking_working_prop,
#     fill = .cluster_5,
#     color = .cluster_5
#   ),
#   position = position_jitter(0.2), color = "darkgray") +
geom_pointrange(
aes(
x = .cluster_5,
fill = .cluster_5,
color = .cluster_5,
xmin = l,
xmax = u
),
data = prep_01
)
# d %>%
ggplot(
) +
# geom_jitter(data = d,
#   aes(
#     x = .cluster_5,
#     y = daily_status_teleworking_working_prop,
#     fill = .cluster_5,
#     color = .cluster_5
#   ),
#   position = position_jitter(0.2), color = "darkgray") +
geom_pointrange(
aes(
# x = .cluster_5,
fill = .cluster_5,
color = .cluster_5,
ymin = l,
ymax = u
),
data = prep_01
)
ggplot(
) +
geom_jitter(data = d,
aes(
x = .cluster_5,
y = daily_status_teleworking_working_prop,
fill = .cluster_5,
color = .cluster_5
),
position = position_jitter(0.2), color = "darkgray")
prep_01
# d %>%
ggplot(
) +
geom_jitter(data = d,
aes(
x = .cluster_5,
y = daily_status_teleworking_working_prop,
fill = .cluster_5,
color = .cluster_5
),
position = position_jitter(0.2), color = "darkgray") +
geom_errorbar(
aes(
x = .cluster_5,
fill = .cluster_5,
color = .cluster_5,
ymin = l,
ymax = u
),
data = prep_01
)
prep_01 <-
d %>%
group_by(.cluster_5) %>%
summarise(
num = mean(daily_status_teleworking_working_prop),
l = quantile(daily_status_teleworking_working_prop, probs = .25),
u = quantile(daily_status_teleworking_working_prop, probs = .75)
) %>%
ungroup()
# d %>%
ggplot(
) +
geom_jitter(data = d,
aes(
x = .cluster_5,
y = daily_status_teleworking_working_prop,
fill = .cluster_5,
color = .cluster_5
),
position = position_jitter(0.2), color = "darkgray") +
geom_pointrange(
aes(
x = .cluster_5,
fill = .cluster_5,
color = .cluster_5,
y = num,
ymin = l,
ymax = u
),
data = prep_01
)
# Combine with violin plots
# d %>%
#   ggplot(df, aes(dose, len)) +
#   geom_violin(color = "darkgray", trim = FALSE) +
#   geom_pointrange(aes(ymin = len-sd, ymax = len+sd), data = df.summary)

library(readxl)
library(flextable)
library(ggthemes)
library(tidymodels)
library(beepr)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
tictoc::tic()
if(!("arsenal" %in% installed.packages()[,"Package"]))
{
install.packages("arsenal")
}
if(!("beepr" %in% installed.packages()[,"Package"]))
{
install.packages("beepr")
}
if(!("geomtextpath" %in% installed.packages()[,"Package"]))
{
install.packages("geomtextpath")
}
if(!("oesrrr" %in% installed.packages()[,"Package"]))
{
devtools::install_github(repo = "GSA/oesrrr")
}
if(!("oesrrr" %in% installed.packages()[,"Package"]))
{
devtools::install_github(repo = "GSA/oesrrr")
}
library(oesrrr)
library(tidyverse)
library(janitor)
library(skimr)
library(DataExplorer)
library(readr)
library(arsenal)
library(Hmisc)
library(readxl)
library(flextable)
library(ggthemes)
library(tidymodels)
beepr::beep(sound = 4)
beepr::beep(sound = 1)
1:10 %>%
purr::map(~beepr::beep(sound = .))
1:10 %>%
map(~beepr::beep(sound = .))
1:10 %>%
walk(~beepr::beep(sound = .))
beepr::beep(sound = 3)
beepr::beep(sound = 5)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
tictoc::tic()
if(!("arsenal" %in% installed.packages()[,"Package"]))
{
install.packages("arsenal")
}
if(!("beepr" %in% installed.packages()[,"Package"]))
{
install.packages("beepr")
}
if(!("geomtextpath" %in% installed.packages()[,"Package"]))
{
install.packages("geomtextpath")
}
if(!("oesrrr" %in% installed.packages()[,"Package"]))
{
devtools::install_github(repo = "GSA/oesrrr")
}
if(!("oesrrr" %in% installed.packages()[,"Package"]))
{
devtools::install_github(repo = "GSA/oesrrr")
}
library(oesrrr)
library(tidyverse)
library(janitor)
library(skimr)
library(DataExplorer)
library(readr)
library(arsenal)
library(Hmisc)
library(readxl)
library(flextable)
library(ggthemes)
library(tidymodels)
# date_cohort_month_start <- ymd(params$date_cohort_month)
# date_cohort_month_end <- ceiling_date(date_cohort_month_start,unit = "month") %>% rollbackward()
# date_observation_window_month_start <- date_cohort_month_start %m+% months(params$observation_window_length_months)
# date_observation_window_month_end <- ceiling_date(date_observation_window_month_start,unit = "month") %>% rollbackward()
load(file = file.path(params$google_drive_home,"03. Data Collection",params$data_folder_1,params$data_file_1))
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
tictoc::tic()
if(!("arsenal" %in% installed.packages()[,"Package"]))
{
install.packages("arsenal")
}
if(!("beepr" %in% installed.packages()[,"Package"]))
{
install.packages("beepr")
}
if(!("geomtextpath" %in% installed.packages()[,"Package"]))
{
install.packages("geomtextpath")
}
if(!("oesrrr" %in% installed.packages()[,"Package"]))
{
devtools::install_github(repo = "GSA/oesrrr")
}
if(!("oesrrr" %in% installed.packages()[,"Package"]))
{
devtools::install_github(repo = "GSA/oesrrr")
}
library(oesrrr)
library(tidyverse)
library(janitor)
library(skimr)
library(DataExplorer)
library(readr)
library(arsenal)
library(Hmisc)
library(readxl)
library(flextable)
library(ggthemes)
library(tidymodels)
# date_cohort_month_start <- ymd(params$date_cohort_month)
# date_cohort_month_end <- ceiling_date(date_cohort_month_start,unit = "month") %>% rollbackward()
# date_observation_window_month_start <- date_cohort_month_start %m+% months(params$observation_window_length_months)
# date_observation_window_month_end <- ceiling_date(date_observation_window_month_start,unit = "month") %>% rollbackward()
load(file = file.path(params$google_drive_home,"03. Data Collection",params$data_folder_1,params$data_file_1))
load(file = file.path(params$google_drive_home,"03. Data Collection",params$data_folder_1,params$data_file_1))
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
tictoc::tic()
if(!("arsenal" %in% installed.packages()[,"Package"]))
{
install.packages("arsenal")
}
if(!("beepr" %in% installed.packages()[,"Package"]))
{
install.packages("beepr")
}
if(!("geomtextpath" %in% installed.packages()[,"Package"]))
{
install.packages("geomtextpath")
}
if(!("oesrrr" %in% installed.packages()[,"Package"]))
{
devtools::install_github(repo = "GSA/oesrrr")
}
if(!("oesrrr" %in% installed.packages()[,"Package"]))
{
devtools::install_github(repo = "GSA/oesrrr")
}
library(oesrrr)
library(tidyverse)
library(janitor)
library(skimr)
library(DataExplorer)
library(readr)
library(arsenal)
library(Hmisc)
library(readxl)
library(flextable)
library(ggthemes)
library(tidymodels)
# date_cohort_month_start <- ymd(params$date_cohort_month)
# date_cohort_month_end <- ceiling_date(date_cohort_month_start,unit = "month") %>% rollbackward()
# date_observation_window_month_start <- date_cohort_month_start %m+% months(params$observation_window_length_months)
# date_observation_window_month_end <- ceiling_date(date_observation_window_month_start,unit = "month") %>% rollbackward()
load(file = file.path(params$google_drive_home,"03. Data Collection",params$data_folder_1,params$data_file_1))
beep_on_error()
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
tictoc::tic()
if(!("arsenal" %in% installed.packages()[,"Package"]))
{
install.packages("arsenal")
}
if(!("beepr" %in% installed.packages()[,"Package"]))
{
install.packages("beepr")
}
if(!("geomtextpath" %in% installed.packages()[,"Package"]))
{
install.packages("geomtextpath")
}
if(!("oesrrr" %in% installed.packages()[,"Package"]))
{
devtools::install_github(repo = "GSA/oesrrr")
}
if(!("oesrrr" %in% installed.packages()[,"Package"]))
{
devtools::install_github(repo = "GSA/oesrrr")
}
library(oesrrr)
library(tidyverse)
library(janitor)
library(skimr)
library(DataExplorer)
library(readr)
library(arsenal)
library(Hmisc)
library(readxl)
library(flextable)
library(ggthemes)
library(tidymodels)
# date_cohort_month_start <- ymd(params$date_cohort_month)
# date_cohort_month_end <- ceiling_date(date_cohort_month_start,unit = "month") %>% rollbackward()
# date_observation_window_month_start <- date_cohort_month_start %m+% months(params$observation_window_length_months)
# date_observation_window_month_end <- ceiling_date(date_observation_window_month_start,unit = "month") %>% rollbackward()
load(file = file.path(params$google_drive_home,"03. Data Collection",params$data_folder_1,params$data_file_1))
kclusts %>%
skim()
load(file = file.path(params$google_drive_home,"03. Data Collection",params$data_folder_1,params$data_file_2))
prep_employees %>%
skim()
clust_1 <-
kclusts %>%
filter(
k == params$in_number_of_clusters_1 &
specification == params$in_specification
)
clust_2 <-
kclusts %>%
filter(
k == params$in_number_of_clusters_2 &
specification == params$in_specification
)
clusters_1 <-
clust_1 %>%
unnest(cols = c(tidied))
assignments_1 <-
clust_1 %>%
unnest(cols = c(augmented))
clusterings_1 <-
clust_1 %>%
unnest(cols = c(glanced))
assignments_1 %>%
glimpse()
clusters_2 <-
clust_2 %>%
unnest(cols = c(tidied))
assignments_2 <-
clust_2 %>%
unnest(cols = c(augmented))
clusterings_2 <-
clust_2 %>%
unnest(cols = c(glanced))
assignments_2 %>%
glimpse()
rename_to_k <- function(in_data)
{
tot_cluster <- in_data %>% select(k) %>% distinct() %>% pull()
out_data <-
in_data %>% rename_with( ~ glue::glue("{.x}_{tot_cluster}"), .cluster)
return(out_data)
}
assignments <-
assignments_1 %>%
rename_to_k() %>%
select(person_id, starts_with(".cluster")) %>%
full_join(assignments_2 %>%
rename_to_k() %>%
select(person_id, starts_with(".cluster")))
assignments %>%
glimpse()
d <-
assignments %>%
select(person_id, starts_with(".cluster")) %>%
full_join(prep_employees) %>%
mutate(
across(
.cols = starts_with(".cluster"),
.fns = ~fct_na_value_to_level(., level = "(Missing)")
)
)
d %>%
skim()
d %>%
group_by(.cluster_2) %>%
skim(daily_status_reporting_to_job_site,
daily_status_reporting_to_job_site_observation_prop,
daily_status_teleworking,
daily_status_teleworking_observation_prop,
days_colocated_1,
days_colocated_1_observation_prop,
days_colocated_supervisor,
days_colocated_supervisor_observation_prop,
days_colocated_team,
days_colocated_team_observation_prop,
days_telework_team,
days_telework_team_observation_prop,
working_days,
team_size_mode) %>%
as.data.frame()
d %>%
group_by(.cluster_5) %>%
skim(daily_status_reporting_to_job_site,
daily_status_reporting_to_job_site_observation_prop,
daily_status_teleworking,
daily_status_teleworking_observation_prop,
days_colocated_1,
days_colocated_1_observation_prop,
days_colocated_supervisor,
days_colocated_supervisor_observation_prop,
days_colocated_team,
days_colocated_team_observation_prop,
days_telework_team,
days_telework_team_observation_prop,
working_days,
team_size_mode) %>%
as.data.frame()
d %>%
group_by(.cluster_2) %>%
skim(starts_with("rule_based_"),
-ends_with("working")) %>%
as.data.frame()
d %>%
group_by(.cluster_5) %>%
skim(starts_with("rule_based_"),
-ends_with("working")) %>%
as.data.frame()
d %>% names()
d %>%
group_by(.cluster_2) %>%
skim(exit_employment,multiple_supervisors)
d %>%
group_by(.cluster_5) %>%
skim(exit_employment,multiple_supervisors)
d %>%
group_by(.cluster_2) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_2, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = sso, y =  prop,fill = .cluster_2)) +
geom_col(position = "dodge")  +
facet_wrap(facets = vars(sso), scales = "free")
d %>%
group_by(.cluster_5) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_5, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = sso, y =  prop,fill = .cluster_5)) +
geom_col(position = "dodge") +
facet_wrap(facets = vars(sso), scales = "free")
d %>%
group_by(.cluster_5) %>%
skim(exit_employment,
multiple_supervisors,
gsa_sso)
names(d)
beepr::beep(sound = 5)
d %>%
group_by(.cluster_5) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_5, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = sso, y =  prop,fill = .cluster_5)) +
geom_col(position = "dodge") +
facet_wrap(facets = vars(sso), scales = "free_y")
d %>%
group_by(.cluster_5) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_5, name = "tot")
) %>%
mutate(
prop = n/tot
)
d %>%
group_by(.cluster_5) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_5, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = sso, y =  prop,fill = .cluster_5)) +
geom_col(position = "dodge") +
facet_wrap(facets = vars(sso), scales = "free_y")
d %>%
group_by(.cluster_5) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_5, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = .cluster_5, y =  prop,fill = .cluster_5)) +
geom_col(position = "dodge") +
facet_wrap(facets = vars(sso), scales = "free_y")
d %>%
group_by(.cluster_5) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_5, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = .cluster_5, y =  prop,fill = .cluster_5)) +
geom_col(position = "dodge") +
facet_wrap(facets = vars(sso)
# , scales = "free_y"
)
d %>%
group_by(.cluster_5) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_5, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = .cluster_5, y =  prop,fill = .cluster_5)) +
geom_col(position = "dodge") +
facet_wrap(facets = vars(sso)
, scales = "free_y"
)
d %>%
group_by(.cluster_5) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_5, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = sso, y =  prop,fill = sso)) +
geom_col(position = "dodge") +
facet_wrap(facets = vars(.cluster_5)
, scales = "free_y"
)
d %>%
group_by(.cluster_5) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_5, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = .cluster_5, y =  prop,fill = .cluster_5)) +
geom_col(position = "dodge") +
facet_wrap(facets = vars(.cluster_5)
, scales = "free_y"
)
d %>%
group_by(.cluster_5) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_5, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = .cluster_5, y =  prop,fill = .cluster_5)) +
geom_col(position = "dodge") +
facet_wrap(facets = vars(sso)
, scales = "free_y"
)
d %>%
group_by(.cluster_2) %>%
count(sso) %>%
ungroup() %>%
left_join(
d %>%
count(.cluster_2, name = "tot")
) %>%
mutate(
prop = n/tot
) %>%
ggplot(aes(x = .cluster_2, y =  prop,fill = .cluster_2)) +
geom_col(position = "dodge")  +
facet_wrap(facets = vars(sso), scales = "free_y")
